{%- if grains.ssl is defined %}
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
}
server {
    listen 443 default_server ssl http2;
    listen [::]:443 default_server ssl http2;
    server_name {{ salt['pillar.get']('gtmanfred:url') }};
    root {{ salt['pillar.get']('gtmanfred:root') }};

    ssl_certificate /etc/letsencrypt/live/{{salt.pillar.get('gtmanfred:url')}}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{salt.pillar.get('gtmanfred:url')}}/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_ciphers EECDH+ECDSA+AESGCM:EECDH+aRSA+AESGCM:EECDH+ECDSA+SHA512:EECDH+ECDSA+SHA384:EECDH+ECDSA+SHA256:ECDH+AESGCM:ECDH+AES256:DH+AESGCM:DH+AES256:RSA+AESGCM:!aNULL:!eNULL:!LOW:!RC4:!3DES:!MD5:!EXP:!PSK:!SRP:!DSS;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:TLS:2m;

    # Larger dhparam
    ssl_dhparam /etc/pki/tls/certs/dhparam.pem;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8;

    # Set HSTS to 365 days
    add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains';

    location = / {
        # Instead of handling the index, just
        # rewrite / to /index.html
        rewrite ^ /index.html;
    }

    location /wedding {
        root /var/www/html;
    }

    location /hook/ {
        proxy_pass https://blog.gtmanfred.com:5000/;
    }

    location / {
        # Serve a .gz version if it exists
        gzip_static on;
        # Try to serve the clean url version first
        try_files $uri.htm $uri.html $uri =404;
    }

    location = /favicon.ico {
        # This never changes, so don't let it expire
        expires max;
    }

    location ^~ /theme {
        # This content should very rarely, if ever, change
        expires 1y;
    }
    location ~ /feeds {
        autoindex on;
    }
}
{%- else %}
server {

    listen 80 default_server;
    listen [::]:80 default_server;

    server_name {{ salt['pillar.get']('gtmanfred:url') }};
    root {{ salt['pillar.get']('gtmanfred:root') }};

    location = / {
        # Instead of handling the index, just
        # rewrite / to /index.html
        rewrite ^ /index.html;
    }

    location /wedding {
        root /var/www/html;
    }

    location / {
        # Serve a .gz version if it exists
        gzip_static on;
        # Try to serve the clean url version first
        try_files $uri.htm $uri.html $uri =404;
    }

    location = /favicon.ico {
        # This never changes, so don't let it expire
        expires max;
    }

    location ^~ /theme {
        # This content should very rarely, if ever, change
        expires 1y;
    }
    location ~ /feeds {
        autoindex on;
    }
}
{%- endif %}
